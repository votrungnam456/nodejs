<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Error - <%= error?.status || 'Something went wrong' %>
  </title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      line-height: 1.6;
      color: #333;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .error-container {
      background: white;
      border-radius: 20px;
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
      padding: 3rem;
      max-width: 600px;
      width: 90%;
      text-align: center;
      animation: slideInUp 0.6s ease;
    }

    .error-icon {
      font-size: 4rem;
      margin-bottom: 1rem;
      color: #ff6b6b;
    }

    .error-code {
      font-size: 3rem;
      font-weight: bold;
      color: #333;
      margin-bottom: 0.5rem;
    }

    .error-title {
      font-size: 1.5rem;
      color: #666;
      margin-bottom: 1rem;
    }

    .error-message {
      font-size: 1.1rem;
      color: #777;
      margin-bottom: 2rem;
      line-height: 1.6;
    }

    .error-details {
      background: #f8f9fa;
      border-radius: 10px;
      padding: 1rem;
      margin-bottom: 2rem;
      text-align: left;
      font-family: 'Courier New', monospace;
      font-size: 0.9rem;
      color: #666;
      max-height: 200px;
      overflow-y: auto;
    }

    .action-buttons {
      display: flex;
      gap: 1rem;
      justify-content: center;
      flex-wrap: wrap;
    }

    .btn {
      padding: 0.8rem 1.5rem;
      border: none;
      border-radius: 50px;
      text-decoration: none;
      font-weight: bold;
      transition: all 0.3s ease;
      cursor: pointer;
      display: inline-block;
    }

    .btn-primary {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
    }

    .btn-secondary {
      background: #f8f9fa;
      color: #666;
      border: 2px solid #e9ecef;
    }

    .btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    }

    .error-timestamp {
      margin-top: 2rem;
      font-size: 0.8rem;
      color: #999;
    }

    @keyframes slideInUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }

      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @media (max-width: 768px) {
      .error-container {
        padding: 2rem;
        margin: 1rem;
      }

      .error-code {
        font-size: 2.5rem;
      }

      .action-buttons {
        flex-direction: column;
        align-items: center;
      }

      .btn {
        width: 100%;
        max-width: 200px;
      }
    }

    .error-type {
      display: inline-block;
      padding: 0.3rem 0.8rem;
      border-radius: 20px;
      font-size: 0.8rem;
      font-weight: bold;
      margin-bottom: 1rem;
    }

    .error-type.client {
      background: #ffeaa7;
      color: #d63031;
    }

    .error-type.server {
      background: #fd79a8;
      color: white;
    }

    .error-type.network {
      background: #74b9ff;
      color: white;
    }
  </style>
</head>

<body>
  <div class="error-container">
    <div class="error-icon">
      <% if (error?.status>= 400 && error?.status < 500) { %>
          ‚ö†Ô∏è
          <% } else if (error?.status>= 500) { %>
            üî•
            <% } else { %>
              ‚ùå
              <% } %>
    </div>

    <div class="error-code">
      <%= error?.status || 'Error' %>
    </div>

    <div class="error-type <%= error?.status >= 500 ? 'server' : error?.status >= 400 ? 'client' : 'network' %>">
      <%= error?.status>= 500 ? 'Server Error' : error?.status >= 400 ? 'Client Error' : 'Network Error' %>
    </div>

    <div class="error-title">
      <%= error?.title || getErrorMessage(error?.status) %>
    </div>

    <div class="error-message">
      <%= error?.message || 'Something unexpected happened. Please try again later.' %>
    </div>

    <% if (error?.details) { %>
      <div class="error-details">
        <strong>Error Details:</strong><br>
        <%= error.details %>
      </div>
      <% } %>

        <div class="action-buttons">
          <a href="/" class="btn btn-primary">Go Home</a>
          <button onclick="history.back()" class="btn btn-secondary">Go Back</button>
          <button onclick="location.reload()" class="btn btn-secondary">Try Again</button>
        </div>

        <div class="error-timestamp">
          Error occurred at: <%= new Date().toLocaleString() %>
        </div>
  </div>

  <script>
    // Helper function to get default error messages
    function getErrorMessage(status) {
      const messages = {
        400: 'Bad Request',
        401: 'Unauthorized',
        403: 'Forbidden',
        404: 'Page Not Found',
        500: 'Internal Server Error',
        502: 'Bad Gateway',
        503: 'Service Unavailable',
        504: 'Gateway Timeout'
      };
      return messages[status] || 'Unknown Error';
    }

    // Add some interactive features
    document.addEventListener('DOMContentLoaded', function () {
      // Add click to copy error details
      const errorDetails = document.querySelector('.error-details');
      if (errorDetails) {
        errorDetails.style.cursor = 'pointer';
        errorDetails.title = 'Click to copy error details';
        errorDetails.addEventListener('click', function () {
          const text = this.textContent.replace('Error Details:', '').trim();
          navigator.clipboard.writeText(text).then(() => {
            this.style.background = '#d4edda';
            setTimeout(() => {
              this.style.background = '#f8f9fa';
            }, 1000);
          });
        });
      }

      // Add keyboard shortcuts
      document.addEventListener('keydown', function (e) {
        if (e.key === 'Escape') {
          history.back();
        } else if (e.key === 'Enter') {
          window.location.href = '/';
        }
      });
    });
  </script>
</body>

</html>